<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='yelp_business' inline='true' name='federated.0d3qxjs1n0ahcm11c56620psddgw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yelp_business' name='semistructpassivestore-direct.1d5dbtq1jmfrn912882870grwoep'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/13369/Downloads/HW6 (1)/HW6' filename='yelp_business.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[yelp_business.json]'>
                  <map key='attributes' value='false' />
                  <map key='hours' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.1d5dbtq1jmfrn912882870grwoep' name='yelp_business.json' table='[yelp_business.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.1d5dbtq1jmfrn912882870grwoep' name='yelp_business.json' table='[yelp_business.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>address</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>business_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>categories</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[is_open]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>is_open</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>review_count</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[yelp_business.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='yelp_business.json' datatype='table' name='[__tableau_internal_object_id__].[yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>business_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Open' datatype='real' name='[is_open]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>is_open</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>postal_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Review Count' datatype='real' name='[review_count]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>review_count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>stars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Yelp Business' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[address]' type='field' />
        <folder-item name='[business_id]' type='field' />
        <folder-item name='[categories]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[postal_code]' type='field' />
        <folder-item name='[state]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Yelp Business'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[address]' type='field' />
          <folder-item name='[business_id]' type='field' />
          <folder-item name='[categories]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[postal_code]' type='field' />
          <folder-item name='[state]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='yelp_business.json' id='yelp_business.json_E0CFC2FAFA9C47C2A2F731A7A9CBD150'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1d5dbtq1jmfrn912882870grwoep' name='yelp_business.json' table='[yelp_business.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='athlete_events' inline='true' name='federated.1a8qlws0n731on1athx7x1nrsniu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_events' name='textscan.1by4uab1gojij70zoaxoy05f2qh9'>
            <connection class='textscan' directory='C:/Users/13369/Downloads/HW6 (1)/HW6' filename='athlete_events.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1by4uab1gojij70zoaxoy05f2qh9' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Sex' ordinal='2' />
            <column datatype='string' name='Age' ordinal='3' />
            <column datatype='string' name='Height' ordinal='4' />
            <column datatype='string' name='Weight' ordinal='5' />
            <column datatype='string' name='Team' ordinal='6' />
            <column datatype='string' name='NOC' ordinal='7' />
            <column datatype='string' name='Games' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='string' name='Season' ordinal='10' />
            <column datatype='string' name='City' ordinal='11' />
            <column datatype='string' name='Sport' ordinal='12' />
            <column datatype='string' name='Event' ordinal='13' />
            <column datatype='string' name='Medal' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1by4uab1gojij70zoaxoy05f2qh9' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Sex' ordinal='2' />
            <column datatype='string' name='Age' ordinal='3' />
            <column datatype='string' name='Height' ordinal='4' />
            <column datatype='string' name='Weight' ordinal='5' />
            <column datatype='string' name='Team' ordinal='6' />
            <column datatype='string' name='NOC' ordinal='7' />
            <column datatype='string' name='Games' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='string' name='Season' ordinal='10' />
            <column datatype='string' name='City' ordinal='11' />
            <column datatype='string' name='Sport' ordinal='12' />
            <column datatype='string' name='Event' ordinal='13' />
            <column datatype='string' name='Medal' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Games]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Games</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Height Range' datatype='real' datatype-customized='true' name='[Height (copy)_4035788229979045888]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Height])' />
      </column>
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[Team (copy)_376050581387399168]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Team]' />
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
        </semantic-values>
      </column>
      <column caption='Weight Range' datatype='real' datatype-customized='true' name='[Weight (copy)_4035788229979127809]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Weight])' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_2E3C61014D9E4096889D11F611A2A527]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albertville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenoble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sarajevo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chamonix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sydney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lillehammer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Innsbruck&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sochi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cortina d&apos;Ampezzo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sankt Moritz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antwerpen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moskva&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Placid&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Squaw Valley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garmisch-Partenkirchen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sapporo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Athina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#9c755f'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_events.csv' id='athlete_events.csv_2E3C61014D9E4096889D11F611A2A527'>
            <properties context=''>
              <relation connection='textscan.1by4uab1gojij70zoaxoy05f2qh9' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Sex' ordinal='2' />
                  <column datatype='string' name='Age' ordinal='3' />
                  <column datatype='string' name='Height' ordinal='4' />
                  <column datatype='string' name='Weight' ordinal='5' />
                  <column datatype='string' name='Team' ordinal='6' />
                  <column datatype='string' name='NOC' ordinal='7' />
                  <column datatype='string' name='Games' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='string' name='Season' ordinal='10' />
                  <column datatype='string' name='City' ordinal='11' />
                  <column datatype='string' name='Sport' ordinal='12' />
                  <column datatype='string' name='Event' ordinal='13' />
                  <column datatype='string' name='Medal' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' Geographic distribution of all golden medals of all countries and all games'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events' name='federated.1a8qlws0n731on1athx7x1nrsniu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8qlws0n731on1athx7x1nrsniu'>
            <column datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[Team (copy)_376050581387399168]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Team]' />
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;West Germany&quot;' value='&quot;Germany&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Event]' derivation='None' name='[none:Event:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team (copy)_376050581387399168]' derivation='None' name='[none:Team (copy)_376050581387399168:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Event:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Aeronautics Mixed Aeronautics&quot;' />
              <groupfilter from='&quot;Alpinism Mixed Alpinism&quot;' function='range' level='[none:Event:nk]' to='&quot;Archery Men&apos;s Team Round&quot;' />
              <groupfilter from='&quot;Archery Women&apos;s Double Columbia Round&quot;' function='range' level='[none:Event:nk]' to='&quot;Art Competitions Mixed Architecture, Designs For Town Planning&quot;' />
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Art Competitions Mixed Literature&quot;' />
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Art Competitions Mixed Literature, Epic Works&quot;' />
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Art Competitions Mixed Literature, Lyric Works&quot;' />
              <groupfilter from='&quot;Art Competitions Mixed Music&quot;' function='range' level='[none:Event:nk]' to='&quot;Art Competitions Mixed Music, Compositions For Solo Or Chorus&quot;' />
              <groupfilter from='&quot;Art Competitions Mixed Painting&quot;' function='range' level='[none:Event:nk]' to='&quot;Art Competitions Mixed Painting, Paintings&quot;' />
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Art Competitions Mixed Sculpturing&quot;' />
              <groupfilter from='&quot;Art Competitions Mixed Sculpturing, Medals And Reliefs&quot;' function='range' level='[none:Event:nk]' to='&quot;Art Competitions Mixed Sculpturing, Statues&quot;' />
              <groupfilter from='&quot;Athletics Men&apos;s 1,500 metres&quot;' function='range' level='[none:Event:nk]' to='&quot;Beach Volleyball Women&apos;s Beach Volleyball&quot;' />
              <groupfilter from='&quot;Boxing Men&apos;s Bantamweight&quot;' function='range' level='[none:Event:nk]' to='&quot;Croquet Mixed Singles, Two Balls&quot;' />
              <groupfilter from='&quot;Cycling Men&apos;s 1 mile&quot;' function='range' level='[none:Event:nk]' to='&quot;Figure Skating Men&apos;s Special Figures&quot;' />
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Figure Skating Mixed Pairs&quot;' />
              <groupfilter from='&quot;Figure Skating Women&apos;s Singles&quot;' function='range' level='[none:Event:nk]' to='&quot;Football Women&apos;s Football&quot;' />
              <groupfilter from='&quot;Golf Men&apos;s Individual&quot;' function='range' level='[none:Event:nk]' to='&quot;Ice Hockey Men&apos;s Ice Hockey&quot;' />
              <groupfilter from='&quot;Jeu De Paume Men&apos;s Singles&quot;' function='range' level='[none:Event:nk]' to='&quot;Lacrosse Men&apos;s Lacrosse&quot;' />
              <groupfilter from='&quot;Modern Pentathlon Men&apos;s Individual&quot;' function='range' level='[none:Event:nk]' to='&quot;Motorboating Mixed C-Class&quot;' />
              <groupfilter from='&quot;Polo Men&apos;s Polo&quot;' function='range' level='[none:Event:nk]' to='&quot;Sailing Mixed 12 metres&quot;' />
              <groupfilter from='&quot;Sailing Mixed 2-3 Ton&quot;' function='range' level='[none:Event:nk]' to='&quot;Shooting Men&apos;s Trap, Team&quot;' />
              <groupfilter from='&quot;Shooting Mixed Free Pistol, 50 metres&quot;' function='range' level='[none:Event:nk]' to='&quot;Shooting Women&apos;s Trap&quot;' />
              <groupfilter function='member' level='[none:Event:nk]' member='&quot;Softball Women&apos;s Softball&quot;' />
              <groupfilter from='&quot;Swimming Men&apos;s 1,000 metres Freestyle&quot;' function='range' level='[none:Event:nk]' to='&quot;Wrestling Men&apos;s Middleweight A, Greco-Roman&quot;' />
              <groupfilter from='&quot;Wrestling Men&apos;s Middleweight, Freestyle&quot;' function='range' level='[none:Event:nk]' to='&quot;Wrestling Women&apos;s Middleweight, Freestyle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]'>
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Season:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' />
              <groupfilter function='member' level='[none:Season:nk]' member='&quot;Winter&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Season:nk]</column>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]</column>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Event:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a8qlws0n731on1athx7x1nrsniu].[Longitude (generated)]' field-type='quantitative' max='16300590.883218147' min='-29471472.233003043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8qlws0n731on1athx7x1nrsniu].[Latitude (generated)]' field-type='quantitative' max='15241069.2085997' min='-11172402.350856366' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Team (copy)_376050581387399168:nk]' />
              <color column='[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]' />
              <geometry column='[federated.1a8qlws0n731on1athx7x1nrsniu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a8qlws0n731on1athx7x1nrsniu].[Latitude (generated)]</rows>
        <cols>[federated.1a8qlws0n731on1athx7x1nrsniu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{35FADDB8-E990-44FF-AD0D-7CE08F14E807}' />
    </worksheet>
    <worksheet name='Distribution of all medals across different sports'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events' name='federated.1a8qlws0n731on1athx7x1nrsniu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8qlws0n731on1athx7x1nrsniu'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Bronze&quot;' />
              <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' />
              <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Silver&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Gold&quot;</bucket>
              <bucket>&quot;Silver&quot;</bucket>
              <bucket>&quot;Bronze&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Sport:nk]</rows>
        <cols>[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]</cols>
      </table>
      <simple-id uuid='{5CD55C27-DD77-4299-AA32-84C2627608AD}' />
    </worksheet>
    <worksheet name='Scatter plot showing the relationship between height and weight, using color for different gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events' name='federated.1a8qlws0n731on1athx7x1nrsniu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8qlws0n731on1athx7x1nrsniu'>
            <column caption='Height Range' datatype='real' datatype-customized='true' name='[Height (copy)_4035788229979045888]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Height])' />
            </column>
            <column datatype='string' name='[Height]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='Weight Range' datatype='real' datatype-customized='true' name='[Weight (copy)_4035788229979127809]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Weight])' />
            </column>
            <column datatype='string' name='[Weight]' role='dimension' type='nominal' />
            <column-instance column='[Height (copy)_4035788229979045888]' derivation='None' name='[none:Height (copy)_4035788229979045888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Weight (copy)_4035788229979127809]' derivation='None' name='[none:Weight (copy)_4035788229979127809:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height (copy)_4035788229979045888:qk]' included-values='in-range'>
            <min>127.0</min>
            <max>226.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight (copy)_4035788229979127809:qk]' included-values='in-range'>
            <min>25.0</min>
            <max>214.0</max>
          </filter>
          <slices>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height (copy)_4035788229979045888:qk]</column>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight (copy)_4035788229979127809:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='rows' value='#000000' />
            <encoding attr='space' class='0' field='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight (copy)_4035788229979127809:qk]' field-type='quantitative' max='257.92708562744724' min='41.582406873904617' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height (copy)_4035788229979045888:qk]' field-type='quantitative' max='248.62617822647016' min='133.78578904131177' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='28' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Sex:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height (copy)_4035788229979045888:qk]</rows>
        <cols>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight (copy)_4035788229979127809:qk]</cols>
      </table>
      <simple-id uuid='{2CC1B93B-97D3-4E10-B21A-CA6F91EA5F88}' />
    </worksheet>
    <worksheet name='The number of gold medals handed out in each summer Olympic game.'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events' name='federated.1a8qlws0n731on1athx7x1nrsniu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a8qlws0n731on1athx7x1nrsniu'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]'>
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Season:nk]</column>
            <column>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]' scope='rows' value='Gold Medals Handed Out' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]</rows>
        <cols>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{67AD2956-A0E2-45DD-A6BE-DF7DACA90B83}' />
    </worksheet>
    <worksheet name='The relationship between height and the number of medals players of that height get for all games'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events' name='federated.1a8qlws0n731on1athx7x1nrsniu' />
          </datasources>
          <datasource-dependencies datasource='federated.1a8qlws0n731on1athx7x1nrsniu'>
            <column datatype='string' name='[Height]' role='dimension' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Height]' derivation='None' name='[none:Height:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]' max='13000' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]</rows>
        <cols>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height:nk]</cols>
      </table>
      <simple-id uuid='{39A489EA-4BE3-41B3-A8A9-6AAC110E3320}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Scatter plot showing the relationship between height and weight, using color for different gender' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Scatter plot showing the relationship between height and weight, using color for different gender' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{75FB15D9-0F04-4CE3-A9B0-77F1083B2320}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name=' Geographic distribution of all golden medals of all countries and all games'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:City:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Event:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:NOC:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Season:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Team (copy)_376050581387399168:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CF57203-C7D6-4F6B-8920-02DDD7FBA962}' />
    </window>
    <window class='worksheet' name='The number of gold medals handed out in each summer Olympic game.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:City:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:NOC:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Season:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A439C232-3F9E-42F3-9D8C-E8058244088D}' />
    </window>
    <window class='worksheet' name='The relationship between height and the number of medals players of that height get for all games'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8qlws0n731on1athx7x1nrsniu].[cnt:Medal:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDBD23DB-3CAF-4785-9C73-2D75132B5DDB}' />
    </window>
    <window class='worksheet' maximized='true' name='Scatter plot showing the relationship between height and weight, using color for different gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Age:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height (copy)_4035788229979045888:ok]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height (copy)_4035788229979045888:qk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Height:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Sex:nk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight (copy)_4035788229979127809:ok]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight (copy)_4035788229979127809:qk]</field>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Weight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AF5EA96-9270-4B34-BD90-70D22CCAE597}' />
    </window>
    <window class='worksheet' name='Distribution of all medals across different sports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a8qlws0n731on1athx7x1nrsniu].[none:Sport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48FA917C-4AF7-432B-A157-7C28EC638F42}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Scatter plot showing the relationship between height and weight, using color for different gender'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2AB22FBA-6FFD-4596-AC92-980E1F263ECF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Geographic distribution of all golden medals of all countries and all games' width='192'>
      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
      Ayx76Lg1n4eFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      CzBZ9OwB/j/wDoFWwl3N+AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution of all medals across different sports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter plot showing the relationship between height and weight, using color for different gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The number of gold medals handed out in each summer Olympic game.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The relationship between height and the number of medals players of that height get for all games' width='192'>
      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
      1k8ukIyEyCsn7W2teEvU5Myln/HqSCs7u2Esbw29Hc3Fx3R5efHnbzLY4CIUSeCpbaStscQa
      wN8I6hSxTF3lC7qylFKmXlBr6+sqr5vHWylTzz/4uWUpPZdSy+vbpV5NFfJ5ZVoPfpeJbKuV
      vViJdqbK5woP/4qlopvLaieRL25l6KqgGw/b6Wp9eUkl80ZRO6OQV/rDg1pmTs3MLX9r3/KJ
      sFrc3C/ZLp/PK+thu+TuqlqPZopbmYbK5/VHv1G7a0sqktaL+6YXlG48rKdZUAsLS6pgFNdX
      z+eV8fCYRjah5pc3S/TtYWvLVOnorlpe21ShWOqb25mGOthZVetbuyqaKq7v4z7m1cbaitre
      3VfZEvV9RM9n1OzCkgqFwn+hb5bKJiJqcWVdhaLxkm1O1Rogn0kTSz2+yjExOUl9UxueJz8J
      FKSTCdL5h8OtkeXO9Dr93e1HX8wySSZij6dQyW0mwtX0tQSPtjMKHBzEDp9QzYZWWE/U0Dba
      dKSZWcgSiT+eVqyuLqBq26huPPqpl8+mSGQej0gTszOMDPcf65tFOhV/PP3IRplYyzLYeezT
      zNSJxw4Or4cTXWci56K7/uiCzjLyRKOPR8u9rWU0GmnoOXquei5zpL5zC3O0dvUcudyMgmz6
      aH0n5jcY6j+2iLQMotHoYX39+R2uT6f4m1ePrT2MHHvhR/X1YuxNMRF/gdeO1VfPJg/r6/L4
      WJgep++F1+hu9B9pl05EST6sb7Daz6fXbvIPv/3Vsb6ZxGLRw/oGVIIv7oX4N69fOdrOLJyu
      KdDe6hzr+zEMw3jwyzRLPDqtmL9zm4PCwza6UeJSKWBluT8+SUZ/2M7QMUs9d2TEuTU+//iY
      holV4umQ2N4a86t7R/pW6rnu1al77Kdyh8c0zBLPuCiDmfG7JAtP9q3Ei5kp7ozPkD88B6Nk
      3/LJPe7PrD1xDgalHnDZXZktqm/xOTyob+ywvnp59dUNrFLnYMSO1Fc3TErd6oztrTG/tnfk
      30GVKPDq5BP1/aZ/e2UwPX7vifoapZ85M1On6ypQ18AQWkqjq6UOAEPPF88DNY2xy2NEHM10
      BD1gFrioiufFuKoZu3AGb307NT4nZKtIV5e6hNLC+XMZurq6AChUa7gKxXPZxvY+ej0Zujpa
      AHBrBt6q4rns8Plz7Og1dDVWgVJcyeaKj+n0cP7iCLq/lcZqNxTqSLtLrHc89Zw/309Te8eD
      OtS5SSf8Rc38dZ0Mn/HQ1fXgU7rGY5H1eIvadQ8O4Ug5jtTX4ypeA5y/NMaBs5n2w/oWv1bJ
      +taUqm8r589lj9TXrRefw4P6Zul6OKd3oeMvsVY4OzbKjl77uL650vUdu3gWvaqNxoDrYX1L
      XAX01PP/AIeSQOFcIaSWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
